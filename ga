import random

from PIL import ImageDraw
from PIL.Image import Image

from Project.charles import Individual
import numpy as np

def get_fitness(self,target_img):
    """
    Compute the sum of absolute differences between the individual and the target image.

    Args:
    - target_img: np.array  (length, width, 3), representing the  target.
    - self: np.array (length, width, 3), representing the individual.

    Returns:
    - fitness: float, sum of the absolute differences of the RGB.
    """
    # check that the images have the same dimensions
    assert target_img.shape == self.shape, "The images need to have the same dimension."
    abs_diff = np.abs(target_img - self)
    fitness = np.sum(abs_diff)

    return fitness

def random_image(self, length, width):
    """
        generate an imagine with given dimension composed of random generated polygons.

        Args:
        - length: int, length of the image.
        - width: int, width of the image.

        Returns:
        - image: PIL.Image
        """
    # Start from a random color image
    color=tuple(np.random.randint(0, 256, 3))
    image = Image.new('RGB', (length, width), color)
    draw = ImageDraw.Draw(image)

    # Draw a casual number of polygons
    iter = random.randint(2, 7)

    for _ in range(iter):
        num_vertices = random.randint(3, 10)
        vertices = [(random.randint(0, width), random.randint(0, length)) for _ in range(num_vertices)]
        color = tuple(np.random.randint(0, 256, 3))
        draw.polygon(vertices, fill=color)

    return image


Individual.get_fitness = get_fitness
Individual.random_image=random_image
